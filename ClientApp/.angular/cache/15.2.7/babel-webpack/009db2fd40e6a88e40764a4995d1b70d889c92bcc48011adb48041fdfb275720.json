{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// rent.service.ts\nexport class RentService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'http://localhost:44480/api/rentdetails'; // Update with the correct base URL\n  }\n\n  getRents() {\n    return this._http.get(this.baseUrl).pipe(catchError(error => {\n      console.error('Error fetching rents:', error);\n      throw error;\n    }));\n  }\n}\nRentService.ɵfac = function RentService_Factory(t) {\n  return new (t || RentService)(i0.ɵɵinject(i1.HttpClient));\n};\nRentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RentService,\n  factory: RentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA;AAIA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,wCAAwC,CAAC,CAAC;EAEnB;;EAEzCC,QAAQ;IACN,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAU,IAAI,CAACC,OAAO,CAAC,CACzCC,IAAI,CACHC,UAAU,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACL;;AAdWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAU,SAAXV,WAAW;EAAAW,YAFV;AAAM","names":["RentService","constructor","_http","getRents","get","baseUrl","pipe","catchError","error","console","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sande\\Desktop\\LosCasaAngular\\ClientApp\\src\\app\\rentdetails\\rentdetails.service.ts"],"sourcesContent":["// rent.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IRent } from '../rents/rent';\r\n\r\n// rent.service.ts\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RentService {\r\n\r\n  private baseUrl = 'http://localhost:44480/api/rentdetails'; // Update with the correct base URL\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getRents(): Observable<IRent[]> {\r\n    return this._http.get<IRent[]>(this.baseUrl)\r\n      .pipe(\r\n        catchError(error => {\r\n          console.error('Error fetching rents:', error);\r\n          throw error;\r\n        })\r\n      );\r\n  }\r\n\r\n  // Add other methods as needed\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ListingformComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListingformComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Price is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListingformComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Price must be greater than or equal to 0. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListingformComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ListingformComponent {\n  constructor(_formBuilder) {\n    this._formBuilder = _formBuilder;\n    this.isEditMode = false;\n    this.listingId = -1;\n    this.createListingForm();\n  }\n  createListingForm() {\n    this.listingForm = this._formBuilder.group({\n      name: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      description: [''],\n      imageUrl: [''],\n      AdditionalImageUrl: [''],\n      Rooms: [0, Validators.required],\n      Toilets: [0, Validators.required],\n      Area: [0, Validators.required],\n      Address: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ListingCreate form submitted:\");\n    console.log(this.listingForm);\n    const newListing = this.listingForm.value;\n    if (this.isEditMode) {\n      this._listingService.updateListing(this.listingId, newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing update failed');\n        }\n      });\n    } else {\n      this._listingService.createListing(newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing creation failed');\n        }\n      });\n    }\n  }\n  backToListings() {\n    this._router.navigate(['/listings']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.listingId = +params['id']; // Convert to number\n        this.loadListingForEdit(this.listingId);\n      }\n    });\n  }\n  loadListingForEdit(listingId) {\n    this._listingService.getListingById(listingId).subscribe(listing => {\n      console.log('retrived listing: ', listing);\n      this.listingForm.patchValue({\n        name: listing.Name,\n        price: listing.Price,\n        description: listing.Description,\n        imageUrl: listing.ImageUrl,\n        AdditionalImageUrl: listing.AdditionalImageUrl,\n        Rooms: listing.Rooms || 0,\n        Toilets: listing.Toilets || 0,\n        Area: listing.Area || 0,\n        Address: listing.Address || ''\n      });\n    }, error => {\n      console.error('Error loading listing for edit:', error);\n    });\n  }\n}\nListingformComponent.ɵfac = function ListingformComponent_Factory(t) {\n  return new (t || ListingformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nListingformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListingformComponent,\n  selectors: [[\"app-listings-listingform\"]],\n  decls: 46,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"for\", \"AdditionalImageUrl\"], [\"type\", \"text\", \"id\", \"AdditionalImageUrl\", \"formControlName\", \"AdditionalImageUrl\", 1, \"form-control\"], [\"for\", \"Rooms\"], [\"type\", \"text\", \"id\", \"Rooms\", \"formControlName\", \"Rooms\", 1, \"form-control\"], [\"for\", \"Toilets\"], [\"type\", \"text\", \"id\", \"Toilets\", \"formControlName\", \"Toilets\", 1, \"form-control\"], [\"for\", \"Area\"], [\"type\", \"text\", \"id\", \"Area\", \"formControlName\", \"Area\", 1, \"form-control\"], [\"for\", \"Address\"], [\"type\", \"text\", \"id\", \"Address\", \"formControlName\", \"Address\", 1, \"form-control\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"text-danger\"]],\n  template: function ListingformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ListingformComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵtemplate(8, ListingformComponent_div_8_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵtemplate(13, ListingformComponent_div_13_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(14, ListingformComponent_div_14_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"textarea\", 8);\n      i0.ɵɵtemplate(19, ListingformComponent_div_19_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 1)(25, \"label\", 11);\n      i0.ɵɵtext(26, \"Additional Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 13);\n      i0.ɵɵtext(30, \"Rooms:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 1)(33, \"label\", 15);\n      i0.ɵɵtext(34, \"Toilets:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 1)(37, \"label\", 17);\n      i0.ɵɵtext(38, \"Area:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 1)(41, \"label\", 19);\n      i0.ɵɵtext(42, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"button\", 21);\n      i0.ɵɵtext(45, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.yourForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.yourForm.get(\"name\").hasError(\"required\") && ctx.yourForm.get(\"name\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.yourForm.get(\"price\").hasError(\"required\") && ctx.yourForm.get(\"price\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yourForm.get(\"price\").hasError(\"min\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.yourForm.get(\"description\").hasError(\"required\") && ctx.yourForm.get(\"description\").touched);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"disabled\", ctx.yourForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n  font-weight: bold;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 2px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGlzdGluZ3MvbGlzdGluZ2Zvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxufVxyXG5cclxubGFiZWx7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAycHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ListingformComponent","constructor","_formBuilder","createListingForm","listingForm","group","name","required","price","min","description","imageUrl","AdditionalImageUrl","Rooms","Toilets","Area","Address","onSubmit","console","log","newListing","value","isEditMode","_listingService","updateListing","listingId","subscribe","response","success","message","_router","navigate","createListing","backToListings","ngOnInit","_route","params","loadListingForEdit","getListingById","listing","patchValue","Name","Price","Description","ImageUrl","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aliso\\source\\repos\\LosCasaAngular12\\ClientApp\\src\\app\\listings\\listingform.component.ts","C:\\Users\\aliso\\source\\repos\\LosCasaAngular12\\ClientApp\\src\\app\\listings\\listingform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ListingService } from './listings.service';\r\n\r\n@Component({\r\n  selector: \"app-listings-listingform\",\r\n  templateUrl: \"./listingform.component.html\",\r\n  styleUrls: ['./listingform.component.css']\r\n})\r\nexport class ListingformComponent {\r\n  listingForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  listingId: number = -1;\r\n\r\n  constructor(private _formBuilder: FormBuilder) {\r\n    this.createListingForm();\r\n  }\r\n\r\n  createListingForm() {\r\n    this.listingForm = this._formBuilder.group({\r\n      name: ['', Validators.required],\r\n      price: [0, [Validators.required, Validators.min(0)]],\r\n      description: [''],\r\n      imageUrl: [''],\r\n      AdditionalImageUrl: [''],\r\n      Rooms: [0, Validators.required],\r\n      Toilets: [0, Validators.required],\r\n      Area: [0, Validators.required],\r\n      Address: ['']\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log(\"ListingCreate form submitted:\");\r\n    console.log(this.listingForm);\r\n    const newListing = this.listingForm.value;\r\n    if (this.isEditMode) {\r\n      this._listingService.updateListing(this.listingId, newListing)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/listings']);\r\n          }\r\n          else {\r\n            console.log('Listing update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._listingService.createListing(newListing)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/listings']);\r\n          }\r\n          else {\r\n            console.log('Listing creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToListings() {\r\n    this._router.navigate(['/listings']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.listingId = +params['id']; // Convert to number\r\n        this.loadListingForEdit(this.listingId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadListingForEdit(listingId: number) {\r\n    this._listingService.getListingById(listingId)\r\n      .subscribe(\r\n        (listing: any) => {\r\n          console.log('retrived listing: ', listing);\r\n          this.listingForm.patchValue({\r\n            name: listing.Name,\r\n            price: listing.Price,\r\n            description: listing.Description,\r\n            imageUrl: listing.ImageUrl,\r\n            AdditionalImageUrl: listing.AdditionalImageUrl,\r\n            Rooms: listing.Rooms || 0, \r\n            Toilets: listing.Toilets || 0, \r\n            Area: listing.Area || 0, \r\n            Address: listing.Address || ''\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading listing for edit:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<h2>{{ isEditMode ? 'Update' : 'Create' }} Listing</h2>\r\n\r\n\r\n<div>\r\n  <form [formGroup]=\"yourForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name:</label>\r\n      <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" required />\r\n      <div *ngIf=\"yourForm.get('name').hasError('required') && yourForm.get('name').touched\" class=\"text-danger\">\r\n        Name is required.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"price\">Price:</label>\r\n      <input type=\"number\" id=\"price\" formControlName=\"price\" class=\"form-control\" required />\r\n      <div *ngIf=\"yourForm.get('price').hasError('required') && yourForm.get('price').touched\" class=\"text-danger\">\r\n        Price is required.\r\n      </div>\r\n      <div *ngIf=\"yourForm.get('price').hasError('min')\" class=\"text-danger\">\r\n        Price must be greater than or equal to 0.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description:</label>\r\n      <textarea id=\"description\" formControlName=\"description\" class=\"form-control\" required></textarea>\r\n      <div *ngIf=\"yourForm.get('description').hasError('required') && yourForm.get('description').touched\" class=\"text-danger\">\r\n        Description is required.\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"imageUrl\">Image URL:</label>\r\n      <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"AdditionalImageUrl\">Additional Image URL:</label>\r\n      <input type=\"text\" id=\"AdditionalImageUrl\" formControlName=\"AdditionalImageUrl\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"Rooms\">Rooms:</label>\r\n      <input type=\"text\" id=\"Rooms\" formControlName=\"Rooms\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"Toilets\">Toilets:</label>\r\n      <input type=\"text\" id=\"Toilets\" formControlName=\"Toilets\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"Area\">Area:</label>\r\n      <input type=\"text\" id=\"Area\" formControlName=\"Area\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"Address\">Address:</label>\r\n      <input type=\"text\" id=\"Address\" formControlName=\"Address\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <button type=\"submit\" [disabled]=\"yourForm.invalid\">Submit</button>\r\n\r\n  </form>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
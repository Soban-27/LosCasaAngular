{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./listings.service\";\nexport let ListingformComponent = /*#__PURE__*/(() => {\n  class ListingformComponent {\n    constructor(_formbuilder, _router, _route, _listingService) {\n      this._formbuilder = _formbuilder;\n      this._router = _router;\n      this._route = _route;\n      this._listingService = _listingService;\n      this.isEditMode = false;\n      this.listingId = -1;\n      this.listingForm = _formbuilder.group({\n        name: ['', Validators.required],\n        price: [0, Validators.required],\n        description: [''],\n        imageUrl: ['']\n      });\n    }\n    onSubmit() {\n      console.log(\"ListingCreate form submitted:\");\n      console.log(this.listingForm);\n      const newListing = this.listingForm.value;\n      if (this.isEditMode) {\n        this._listingService.updateListing(this.listingId, newListing).subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/listings']);\n          } else {\n            console.log('Listing update failed');\n          }\n        });\n      } else {\n        this._listingService.createListing(newListing).subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/listings']);\n          } else {\n            console.log('Listing creation failed');\n          }\n        });\n      }\n    }\n    backToListings() {\n      this._router.navigate(['/listings']);\n    }\n    ngOnInit() {\n      this._route.params.subscribe(params => {\n        if (params['mode'] === 'create') {\n          this.isEditMode = false; // Create mode\n        } else if (params['mode'] === 'edit') {\n          this.isEditMode = true; // Edit mode\n          this.listingId = +params['id']; // Convert to number\n          this.loadListingForEdit(this.listingId);\n        }\n      });\n    }\n    loadListingForEdit(listingId) {\n      this._listingService.getListingById(listingId).subscribe(listing => {\n        console.log('retrived listing: ', listing);\n        this.listingForm.patchValue({\n          name: listing.Name,\n          price: listing.Price,\n          description: listing.Description,\n          imageUrl: listing.ImageUrl\n        });\n      }, error => {\n        console.error('Error loading listing for edit:', error);\n      });\n    }\n  }\n  ListingformComponent.ɵfac = function ListingformComponent_Factory(t) {\n    return new (t || ListingformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ListingService));\n  };\n  ListingformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListingformComponent,\n    selectors: [[\"app-listings-listingform\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n    template: function ListingformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ListingformComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"textarea\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Image URL:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ListingformComponent_Template_button_click_21_listener() {\n          return ctx.backToListings();\n        });\n        i0.ɵɵtext(22, \"Cancel\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.listingForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", ctx.listingForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing \");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n  return ListingformComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
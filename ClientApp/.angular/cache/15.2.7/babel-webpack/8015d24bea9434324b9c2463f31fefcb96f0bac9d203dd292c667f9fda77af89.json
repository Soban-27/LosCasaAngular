{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./rents.service\";\nimport * as i3 from \"../listings/listings.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../shared/convert-to-currency.pipe\";\nexport class RentsComponent {\n  constructor(fb, rentService, listingService, route, router) {\n    this.fb = fb;\n    this.rentService = rentService;\n    this.listingService = listingService;\n    this.route = route;\n    this.router = router;\n    this.rentForm = this.fb.group({\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    console.log(\"Rent Listing form submitted:\");\n    console.log(this.rentForm);\n    if (this.rentForm.valid) {\n      const newRent = {\n        listingId: this.listingId,\n        userId: this.userId,\n        startDate: new Date(this.rentForm.value.startDate),\n        endDate: new Date(this.rentForm.value.endDate),\n        price: this.calculatePrice()\n      };\n      // Assuming that your RentService has a createRent method\n      this.rentService.createRent(newRent).subscribe({\n        next: rent => {\n          console.log('Rent created successfully', rent);\n          this.router.navigate(['/']); // Navigate to the desired route after success\n        },\n\n        error: error => {\n          console.error('Error occurred while creating rent: ', error);\n        }\n      });\n    } else {\n      console.log('Form is invalid. Please fill in all required fields.');\n    }\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (!id) {\n        throw new Error('No Listing ID provided in the route.');\n      }\n      this.listingId = +id;\n      this.loadListingPrice(this.listingId);\n    });\n  }\n  loadListingPrice(listingId) {\n    this.listingService.getListingById(listingId).subscribe(listing => {\n      this.listingPrice = listing.Price;\n    });\n  }\n  calculatePrice() {\n    const startDate = this.rentForm.value.startDate;\n    const endDate = this.rentForm.value.endDate;\n    if (startDate && endDate && this.listingPrice) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      if (start >= end) {\n        console.error('End date must be after the start date.');\n        return 0;\n      }\n      const diff = end.getTime() - start.getTime();\n      const days = Math.ceil(diff / (1000 * 60 * 60 * 24)); // Convert milliseconds to days\n      return days * this.listingPrice;\n    }\n    return 0;\n  }\n  rentListing() {\n    if (this.rentForm.valid) {\n      const price = this.calculatePrice();\n      const newRent = {\n        listingId: this.listingId,\n        userId: this.userId,\n        startDate: new Date(this.rentForm.value.startDate),\n        endDate: new Date(this.rentForm.value.endDate),\n        price: price\n      };\n      this.rentService.createRent(newRent).subscribe({\n        next: rent => {\n          console.log('Rent created successfully', rent);\n          this.router.navigate(['/']); // Navigate to the desired route after success\n        },\n\n        error: error => {\n          console.error('Error occurred while creating rent: ', error);\n        }\n      });\n    }\n  }\n}\nRentsComponent.ɵfac = function RentsComponent_Factory(t) {\n  return new (t || RentsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RentService), i0.ɵɵdirectiveInject(i3.ListingService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n};\nRentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RentsComponent,\n  selectors: [[\"app-rents\"]],\n  decls: 19,\n  vars: 6,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"formControlName\", \"startDate\", 1, \"form-control\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"formControlName\", \"endDate\", 1, \"form-control\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function RentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Rent Listing\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RentsComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.rentListing();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Start Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"End Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n      i0.ɵɵtext(14, \"Calculated Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵpipe(16, \"convertToCurrency\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Confirm Rent\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.rentForm);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(16, 3, ctx.calculatePrice(), \"NOK\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.rentForm.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.ConvertToCurrency],\n  styles: [\".rent-container[_ngcontent-%COMP%] {\\r\\n  background: #fff;\\r\\n  padding: 2rem;\\r\\n  border-radius: 8px;\\r\\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\\r\\n  max-width: 600px;\\r\\n  margin: 2rem auto;\\r\\n}\\r\\n\\r\\n.rent-form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 0.5rem;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.date-input[_ngcontent-%COMP%] {\\r\\n  padding: 0.5rem;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n  .date-input[_ngcontent-%COMP%]:focus {\\r\\n    border-color: #007bff;\\r\\n  }\\r\\n\\r\\n.price-input[_ngcontent-%COMP%] {\\r\\n  padding: 0.5rem;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 4px;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.btn-confirm[_ngcontent-%COMP%] {\\r\\n  padding: 0.5rem 1rem;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  color: #fff;\\r\\n  background-color: #007bff;\\r\\n  cursor: pointer;\\r\\n  transition: background-color 0.2s;\\r\\n}\\r\\n\\r\\n  .btn-confirm[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\r\\n\\r\\n  .btn-confirm[_ngcontent-%COMP%]:disabled {\\r\\n    background-color: #cccccc;\\r\\n    cursor: not-allowed;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVudHMvcmVudHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLG9DQUFvQztFQUNwQyxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7RUFFRTtJQUNFLHFCQUFxQjtFQUN2Qjs7QUFFRjtFQUNFLGVBQWU7RUFDZixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7RUFFRTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixtQkFBbUI7RUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIucmVudC1jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgcGFkZGluZzogMnJlbTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIG1heC13aWR0aDogNjAwcHg7XHJcbiAgbWFyZ2luOiAycmVtIGF1dG87XHJcbn1cclxuXHJcbi5yZW50LWZvcm0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmZvcm0tZ3JvdXAge1xyXG4gIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5kYXRlLWlucHV0IHtcclxuICBwYWRkaW5nOiAwLjVyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuXHJcbiAgLmRhdGUtaW5wdXQ6Zm9jdXMge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmO1xyXG4gIH1cclxuXHJcbi5wcmljZS1pbnB1dCB7XHJcbiAgcGFkZGluZzogMC41cmVtO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcblxyXG4uYnRuLWNvbmZpcm0ge1xyXG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xyXG59XHJcblxyXG4gIC5idG4tY29uZmlybTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuXHJcbiAgLmJ0bi1jb25maXJtOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","RentsComponent","constructor","fb","rentService","listingService","route","router","rentForm","group","startDate","required","endDate","onSubmit","console","log","valid","newRent","listingId","userId","Date","value","price","calculatePrice","createRent","subscribe","next","rent","navigate","error","ngOnInit","paramMap","params","id","get","Error","loadListingPrice","getListingById","listing","listingPrice","Price","start","end","diff","getTime","days","Math","ceil","rentListing","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\sande\\Desktop\\LosCasaAngular\\ClientApp\\src\\app\\rents\\rents.component.ts","C:\\Users\\sande\\Desktop\\LosCasaAngular\\ClientApp\\src\\app\\rents\\rents.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { RentService } from './rents.service';\r\nimport { ListingService } from '../listings/listings.service';\r\nimport { IListing } from '../listings/listing';\r\nimport { IRent } from './rent';\r\n\r\n@Component({\r\n  selector: 'app-rents',\r\n  templateUrl: './rents.component.html',\r\n  styleUrls: ['./rents.component.css']\r\n})\r\n\r\nexport class RentsComponent implements OnInit {\r\n  rentForm: FormGroup;\r\n  listingId!: number;\r\n  listingPrice!: number;\r\n  userId!: number; \r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private rentService: RentService,\r\n    private listingService: ListingService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.rentForm = this.fb.group({\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"Rent Listing form submitted:\");\r\n    console.log(this.rentForm);\r\n\r\n    if (this.rentForm.valid) {\r\n      const newRent = {\r\n        listingId: this.listingId,\r\n        userId: this.userId,\r\n        startDate: new Date(this.rentForm.value.startDate),\r\n        endDate: new Date(this.rentForm.value.endDate),\r\n        price: this.calculatePrice()\r\n      };\r\n\r\n      // Assuming that your RentService has a createRent method\r\n      this.rentService.createRent(newRent).subscribe({\r\n        next: (rent) => {\r\n          console.log('Rent created successfully', rent);\r\n          this.router.navigate(['/']); // Navigate to the desired route after success\r\n        },\r\n        error: (error) => {\r\n          console.error('Error occurred while creating rent: ', error);\r\n        }\r\n      });\r\n    } else {\r\n      console.log('Form is invalid. Please fill in all required fields.');\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const id = params.get('id');\r\n      if (!id) {\r\n        throw new Error('No Listing ID provided in the route.');\r\n      }\r\n      this.listingId = +id;\r\n      this.loadListingPrice(this.listingId);\r\n    });\r\n  }\r\n  loadListingPrice(listingId: number): void {\r\n    this.listingService.getListingById(listingId).subscribe((listing: IListing) => {\r\n      this.listingPrice = listing.Price;\r\n    })\r\n  }\r\n\r\n\r\n  calculatePrice(): number {\r\n    const startDate = this.rentForm.value.startDate;\r\n    const endDate = this.rentForm.value.endDate;\r\n    if (startDate && endDate && this.listingPrice) {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      if (start >= end) {\r\n        console.error('End date must be after the start date.');\r\n        return 0\r\n      }\r\n      const diff = end.getTime() - start.getTime();\r\n      const days = Math.ceil (diff/(1000 * 60 * 60 * 24)); // Convert milliseconds to days\r\n      return days * this.listingPrice;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  rentListing(): void {\r\n    if (this.rentForm.valid) {\r\n      const price = this.calculatePrice();\r\n      const newRent: IRent = {\r\n        listingId: this.listingId,\r\n        userId: this.userId, // Make sure to set the user ID from your user context\r\n        startDate: new Date(this.rentForm.value.startDate),\r\n        endDate: new Date(this.rentForm.value.endDate),\r\n        price: price\r\n      };\r\n      this.rentService.createRent(newRent).subscribe({\r\n        next: (rent) => {\r\n          console.log('Rent created successfully', rent);\r\n          this.router.navigate(['/']); // Navigate to the desired route after success\r\n        },\r\n        error: (error) => {\r\n          console.error('Error occurred while creating rent: ', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2>Rent Listing</h2>\r\n  <form [formGroup]=\"rentForm\" (ngSubmit)=\"rentListing()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"startDate\">Start Date:</label>\r\n      <input type=\"date\" formControlName=\"startDate\" class=\"form-control\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"endDate\">End Date:</label>\r\n      <input type=\"date\" formControlName=\"endDate\" class=\"form-control\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Calculated Price:</label>\r\n      <input type=\"text\" [value]=\"calculatePrice() | convertToCurrency:'NOK'\" class=\"form-control\" readonly>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!rentForm.valid\">Confirm Rent</button>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
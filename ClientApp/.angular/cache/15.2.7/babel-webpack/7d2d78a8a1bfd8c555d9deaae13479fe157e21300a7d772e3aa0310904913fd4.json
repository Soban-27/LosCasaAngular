{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RentService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'api/rent';\n  }\n  // Getting the RENTS\n  getRents() {\n    return this._http.get(this.baseUrl);\n  }\n  // CREATING a new RENTS\n  createRent(newRent) {\n    const createUrl = `${this.baseUrl}/create`;\n    return this._http.post(createUrl, newRent);\n  }\n  // Get Rent by ID\n  getRentById(rentId) {\n    const url = `${this.baseUrl}/${rentId}`;\n    return this._http.get(url);\n  }\n  // Update the rents\n  updateRent(rentId, updatedRent) {\n    const url = `${this.baseUrl}/update/${rentId}`;\n    updatedRent.rentId = rentId;\n    return this._http.put(url, updatedRent);\n  }\n  // DELETE a Rent\n  deleteRent(rentId) {\n    const url = `${this.baseUrl}/delete/${rentId}`;\n    return this._http.delete(url);\n  }\n}\nRentService.ɵfac = function RentService_Factory(t) {\n  return new (t || RentService)(i0.ɵɵinject(i1.HttpClient));\n};\nRentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RentService,\n  factory: RentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,UAAU;EAEa;EAGzC;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAU,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEA;EAEAC,UAAU,CAACC,OAAc;IACvB,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACH,OAAO,SAAS;IAC1C,OAAO,IAAI,CAACH,KAAK,CAACO,IAAI,CAAMD,SAAS,EAAED,OAAO,CAAC;EACjD;EAGA;EAEAG,WAAW,CAACC,MAAc;IACxB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,IAAIM,MAAM,EAAE;IACvC,OAAO,IAAI,CAACT,KAAK,CAACE,GAAG,CAACQ,GAAG,CAAC;EAC5B;EAEA;EACAC,UAAU,CAACF,MAAc,EAAEG,WAAkB;IAC3C,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,WAAWM,MAAM,EAAE;IAC9CG,WAAW,CAACH,MAAM,GAAGA,MAAM;IAC3B,OAAO,IAAI,CAACT,KAAK,CAACa,GAAG,CAAMH,GAAG,EAAEE,WAAW,CAAC;EAC9C;EAGA;EAEAE,UAAU,CAACL,MAAc;IACvB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,WAAWM,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACT,KAAK,CAACe,MAAM,CAACL,GAAG,CAAC;EAC/B;;AAxCWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAJV;AAAM","names":["RentService","constructor","_http","getRents","get","baseUrl","createRent","newRent","createUrl","post","getRentById","rentId","url","updateRent","updatedRent","put","deleteRent","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aliso\\source\\repos\\LosCasaAngular5\\ClientApp\\src\\app\\rents\\rents.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IRent } from './rent'; // Import your rent model\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class RentService {\r\n  private baseUrl = 'api/rent';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  // Getting the RENTS\r\n\r\n  getRents(): Observable<IRent[]> {\r\n    return this._http.get<IRent[]>(this.baseUrl);\r\n  }\r\n\r\n  // CREATING a new RENTS\r\n\r\n  createRent(newRent: IRent): Observable<any> {\r\n    const createUrl = `${this.baseUrl}/create`;\r\n    return this._http.post<any>(createUrl, newRent);\r\n  }\r\n\r\n\r\n  // Get Rent by ID\r\n\r\n  getRentById(rentId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/${rentId}`;\r\n    return this._http.get(url);\r\n  }\r\n\r\n  // Update the rents\r\n  updateRent(rentId: number, updatedRent: IRent): Observable<any> {\r\n    const url = `${this.baseUrl}/update/${rentId}`;\r\n    updatedRent.rentId = rentId;\r\n    return this._http.put<any>(url, updatedRent);\r\n  }\r\n\r\n\r\n  // DELETE a Rent\r\n\r\n  deleteRent(rentId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/delete/${rentId}`;\r\n    return this._http.delete(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from '@angular/forms';\nlet ListingformComponent = class ListingformComponent {\n  constructor(_formbuilder, _router, _route, _listingService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._listingService = _listingService;\n    this.isEditMode = false;\n    this.listingId = -1;\n    this.listingForm = _formbuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      description: [''],\n      imageUrl: [''],\n      AdditionalImageUrl: [''],\n      Rooms: [0, Validators.required],\n      Toilets: [0, Validators.required],\n      Area: [0, Validators.required],\n      Address: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ListingCreate form submitted:\");\n    console.log(this.listingForm);\n    const newListing = this.listingForm.value;\n    if (this.isEditMode) {\n      this._listingService.updateListing(this.listingId, newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing update failed');\n        }\n      });\n    } else {\n      this._listingService.createListing(newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing creation failed');\n        }\n      });\n    }\n  }\n  backToListings() {\n    this._router.navigate(['/listings']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.listingId = +params['id']; // Convert to number\n        this.loadListingForEdit(this.listingId);\n      }\n    });\n  }\n  loadListingForEdit(listingId) {\n    this._listingService.getListingById(listingId).subscribe(listing => {\n      console.log('retrived listing: ', listing);\n      this.listingForm.patchValue({\n        name: listing.Name,\n        price: listing.Price,\n        description: listing.Description,\n        imageUrl: listing.ImageUrl,\n        AdditionalImageUrl: listing.AdditionalImageUrl,\n        Rooms: listing.Rooms || 0,\n        Toilets: listing.Toilets || 0,\n        Area: listing.Area || 0,\n        Address: listing.Address || ''\n      });\n    }, error => {\n      console.error('Error loading listing for edit:', error);\n    });\n  }\n};\nListingformComponent = __decorate([Component({\n  selector: \"app-listings-listingform\",\n  templateUrl: \"./listingform.component.html\",\n  styleUrls: ['./listingform.component.css']\n})], ListingformComponent);\nexport { ListingformComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","ListingformComponent","constructor","_formbuilder","_router","_route","_listingService","listingForm","group","name","required","price","description","imageUrl","AdditionalImageUrl","Rooms","Toilets","Area","Address","onSubmit","console","log","newListing","value","isEditMode","updateListing","listingId","subscribe","response","success","message","navigate","createListing","backToListings","ngOnInit","params","loadListingForEdit","getListingById","listing","patchValue","Name","Price","Description","ImageUrl","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aliso\\source\\repos\\LosCasaAngular12\\ClientApp\\src\\app\\listings\\listingform.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ListingService } from './listings.service';\r\n\r\n@Component({\r\n  selector: \"app-listings-listingform\",\r\n  templateUrl: \"./listingform.component.html\",\r\n  styleUrls: ['./listingform.component.css']\r\n})\r\nexport class ListingformComponent {\r\n  listingForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  listingId: number = -1;\r\n\r\n  constructor(\r\n    private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _listingService: ListingService\r\n  ) {\r\n    this.listingForm = _formbuilder.group({\r\n      name: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      description: [''],\r\n      imageUrl: [''],\r\n      AdditionalImageUrl: [''],\r\n      Rooms: [0, Validators.required], \r\n      Toilets: [0, Validators.required],\r\n      Area: [0, Validators.required], \r\n      Address: [''] \r\n   \r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"ListingCreate form submitted:\");\r\n    console.log(this.listingForm);\r\n    const newListing = this.listingForm.value;\r\n    if (this.isEditMode) {\r\n      this._listingService.updateListing(this.listingId, newListing)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/listings']);\r\n          }\r\n          else {\r\n            console.log('Listing update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._listingService.createListing(newListing)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/listings']);\r\n          }\r\n          else {\r\n            console.log('Listing creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToListings() {\r\n    this._router.navigate(['/listings']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.listingId = +params['id']; // Convert to number\r\n        this.loadListingForEdit(this.listingId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadListingForEdit(listingId: number) {\r\n    this._listingService.getListingById(listingId)\r\n      .subscribe(\r\n        (listing: any) => {\r\n          console.log('retrived listing: ', listing);\r\n          this.listingForm.patchValue({\r\n            name: listing.Name,\r\n            price: listing.Price,\r\n            description: listing.Description,\r\n            imageUrl: listing.ImageUrl,\r\n            AdditionalImageUrl: listing.AdditionalImageUrl,\r\n            Rooms: listing.Rooms || 0, \r\n            Toilets: listing.Toilets || 0, \r\n            Area: listing.Area || 0, \r\n            Address: listing.Address || ''\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading listing for edit:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
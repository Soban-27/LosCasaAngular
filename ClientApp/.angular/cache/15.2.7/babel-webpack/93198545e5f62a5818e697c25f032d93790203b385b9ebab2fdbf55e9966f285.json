{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ListingService = /*#__PURE__*/(() => {\n  class ListingService {\n    constructor(_http) {\n      this._http = _http;\n      this.baseUrl = 'api/listing';\n    }\n    //getListings(): Observable<IListing[]> {\n    //  return this._http.get<IListing[]>(this.baseUrl);\n    //}\n    createListing(newListing) {\n      const createUrl = 'api/listing/create';\n      return this._http.post(createUrl, newListing);\n    }\n    getListingById(listingId) {\n      const url = `${this.baseUrl}/${listingId}`;\n      return this._http.get(url);\n    }\n    updateListing(listingId, newListing) {\n      const url = `${this.baseUrl}/update/${listingId}`;\n      newListing.listingId = listingId;\n      return this._http.put(url, newListing);\n    }\n    deleteListing(listingId) {\n      const url = `${this.baseUrl}/delete/${listingId}`;\n      return this._http.delete(url);\n    }\n    getListings(maxPrice, minRooms) {\n      let params = new HttpParams();\n      if (maxPrice != null) {\n        params = params.set('maxPrice', maxPrice.toString());\n      }\n      if (minRooms != null) {\n        params = params.set('minRooms', minRooms.toString());\n      }\n      return this._http.get(this.baseUrl, {\n        params: params\n      });\n    }\n  }\n  ListingService.ɵfac = function ListingService_Factory(t) {\n    return new (t || ListingService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ListingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ListingService,\n    factory: ListingService.ɵfac,\n    providedIn: 'root'\n  });\n  return ListingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
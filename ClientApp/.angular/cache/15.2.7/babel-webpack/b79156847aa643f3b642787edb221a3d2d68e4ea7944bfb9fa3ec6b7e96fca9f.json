{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login/auth.service\";\nimport * as i2 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n  onRegister() {\n    if (this.user.password === this.user.confirmPassword) {\n      this.authService.register(this.user.email, this.user.password).subscribe({\n        next: response => {\n          console.log('Registration successful:', response);\n          // show success message\n        },\n\n        error: error => {\n          console.error('Registration failed:', error);\n          // Show error message\n        }\n      });\n    } else {\n      console.error('Passwords do not match');\n      // Show some error to the user\n    }\n  }\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onRegister();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.user.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.confirmPassword);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,iBAAiB;EAO5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN/B,SAAI,GAAG;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;KAClB;EAE+C;EAEhDC,UAAU;IACR,IAAI,IAAI,CAACC,IAAI,CAACH,QAAQ,KAAK,IAAI,CAACG,IAAI,CAACF,eAAe,EAAE;MACpD,IAAI,CAACH,WAAW,CAACM,QAAQ,CAAC,IAAI,CAACD,IAAI,CAACJ,KAAK,EAAE,IAAI,CAACI,IAAI,CAACH,QAAQ,CAAC,CAACK,SAAS,CAAC;QACvEC,IAAI,EAAGC,QAAQ,IAAI;UACjBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;UACjD;QACF,CAAC;;QACDG,KAAK,EAAGA,KAAK,IAAI;UACfF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5C;QACF;OACD,CAAC;KACH,MAAM;MACLF,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC;MACvC;;EAEJ;;;AAzBWd,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR9BC,+BAAgC;MAA1BA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MAC7BD,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,gCAAmG;MAA/CA;QAAA;MAAA,EAAwB;MAA5EA,iBAAmG;MAErGA,8BAAwB;MACAA,wBAAQ;MAAAA,iBAAQ;MACtCA,gCAA+G;MAArDA;QAAA;MAAA,EAA2B;MAArFA,iBAA+G;MAEjHA,8BAAwB;MACOA,iCAAgB;MAAAA,iBAAQ;MACrDA,iCAAoI;MAAnEA;QAAA;MAAA,EAAkC;MAAnGA,iBAAoI;MAEtIA,kCAA8C;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAVTA,eAAwB;MAAxBA,wCAAwB;MAIlBA,eAA2B;MAA3BA,2CAA2B;MAIpBA,eAAkC;MAAlCA,kDAAkC","names":["RegisterComponent","constructor","authService","email","password","confirmPassword","onRegister","user","register","subscribe","next","response","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\aliso\\source\\repos\\LosCasaAngular5\\ClientApp\\src\\app\\register\\register.component.ts","C:\\Users\\aliso\\source\\repos\\LosCasaAngular5\\ClientApp\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../login/auth.service'; \r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  user = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  onRegister() {\r\n    if (this.user.password === this.user.confirmPassword) {\r\n      this.authService.register(this.user.email, this.user.password).subscribe({\r\n        next: (response) => {\r\n          console.log('Registration successful:', response);\r\n          // show success message\r\n        },\r\n        error: (error) => {\r\n          console.error('Registration failed:', error);\r\n          // Show error message\r\n        }\r\n      });\r\n    } else {\r\n      console.error('Passwords do not match');\r\n      // Show some error to the user\r\n    }\r\n  }\r\n}\r\n\r\n","<form (ngSubmit)=\"onRegister()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"confirmPassword\">Confirm Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" [(ngModel)]=\"user.confirmPassword\" name=\"confirmPassword\" required>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Register</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
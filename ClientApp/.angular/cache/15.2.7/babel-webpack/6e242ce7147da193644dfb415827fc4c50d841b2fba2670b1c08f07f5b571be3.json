{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ListingService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'api/listing';\n  }\n  //getListings(): Observable<IListing[]> {\n  //  return this._http.get<IListing[]>(this.baseUrl);\n  //}\n  createListing(newListing) {\n    const createUrl = 'api/listing/create';\n    return this._http.post(createUrl, newListing);\n  }\n  getListingById(listingId) {\n    const url = `${this.baseUrl}/${listingId}`;\n    return this._http.get(url);\n  }\n  updateListing(listingId, newListing) {\n    const url = `${this.baseUrl}/update/${listingId}`;\n    newListing.listingId = listingId;\n    return this._http.put(url, newListing);\n  }\n  deleteListing(listingId) {\n    const url = `${this.baseUrl}/delete/${listingId}`;\n    return this._http.delete(url);\n  }\n  getListings(maxPrice, minRooms) {\n    let params = new HttpParams();\n    if (maxPrice != null) {\n      params = params.set('maxPrice', maxPrice.toString());\n    }\n    if (minRooms != null) {\n      params = params.set('minRooms', minRooms.toString());\n    }\n    return this._http.get(this.baseUrl, {\n      params: params\n    });\n  }\n}\nListingService.ɵfac = function ListingService_Factory(t) {\n  return new (t || ListingService)(i0.ɵɵinject(i1.HttpClient));\n};\nListingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListingService,\n  factory: ListingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAO7D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,aAAa;EAEU;EAEzC;EACA;EACA;EAEAC,aAAa,CAACC,UAAoB;IAChC,MAAMC,SAAS,GAAG,oBAAoB;IACtC,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAMD,SAAS,EAAED,UAAU,CAAC;EACpD;EAEAG,cAAc,CAACC,SAAiB;IAC9B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,IAAIF,SAAS,EAAE;IAC1C,OAAO,IAAI,CAACN,KAAK,CAACS,GAAG,CAACF,GAAG,CAAC;EAC5B;EAEAG,aAAa,CAACJ,SAAiB,EAAEJ,UAAe;IAC9C,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,WAAWF,SAAS,EAAE;IACjDJ,UAAU,CAACI,SAAS,GAAGA,SAAS;IAChC,OAAO,IAAI,CAACN,KAAK,CAACW,GAAG,CAAMJ,GAAG,EAAEL,UAAU,CAAC;EAC7C;EAEAU,aAAa,CAACN,SAAiB;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,WAAWF,SAAS,EAAE;IACjD,OAAO,IAAI,CAACN,KAAK,CAACa,MAAM,CAACN,GAAG,CAAC;EAC/B;EAEAO,WAAW,CAACC,QAAiB,EAAEC,QAAiB;IAC9C,IAAIC,MAAM,GAAG,IAAIpB,UAAU,EAAE;IAC7B,IAAIkB,QAAQ,IAAI,IAAI,EAAE;MACpBE,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,QAAQ,EAAE,CAAC;;IAEtD,IAAIH,QAAQ,IAAI,IAAI,EAAE;MACpBC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACG,QAAQ,EAAE,CAAC;;IAEtD,OAAO,IAAI,CAACnB,KAAK,CAACS,GAAG,CAAM,IAAI,CAACD,OAAO,EAAE;MAAES,MAAM,EAAEA;IAAM,CAAE,CAAC;EAC9D;;AAxCWnB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["HttpParams","ListingService","constructor","_http","createListing","newListing","createUrl","post","getListingById","listingId","url","baseUrl","get","updateListing","put","deleteListing","delete","getListings","maxPrice","minRooms","params","set","toString","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\LosCasaAngular\\ClientApp\\src\\app\\listings\\listings.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IListing } from './listing'; // Import your item model\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  private baseUrl = 'api/listing';\n\n  constructor(private _http: HttpClient) { }\n\n  //getListings(): Observable<IListing[]> {\n  //  return this._http.get<IListing[]>(this.baseUrl);\n  //}\n\n  createListing(newListing: IListing): Observable<any> {\n    const createUrl = 'api/listing/create';\n    return this._http.post<any>(createUrl, newListing);\n  }\n\n  getListingById(listingId: number): Observable<any> {\n    const url = `${this.baseUrl}/${listingId}`;\n    return this._http.get(url);\n  }\n\n  updateListing(listingId: number, newListing: any): Observable<any> {\n    const url = `${this.baseUrl}/update/${listingId}`;\n    newListing.listingId = listingId;\n    return this._http.put<any>(url, newListing);\n  }\n\n  deleteListing(listingId: number): Observable<any> {\n    const url = `${this.baseUrl}/delete/${listingId}`;\n    return this._http.delete(url);\n  }\n\n  getListings(maxPrice?: number, minRooms?: number): Observable<any> {\n    let params = new HttpParams();\n    if (maxPrice != null) {\n      params = params.set('maxPrice', maxPrice.toString());\n    }\n    if (minRooms != null) {\n      params = params.set('minRooms', minRooms.toString());\n    }\n    return this._http.get<any>(this.baseUrl, { params: params });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
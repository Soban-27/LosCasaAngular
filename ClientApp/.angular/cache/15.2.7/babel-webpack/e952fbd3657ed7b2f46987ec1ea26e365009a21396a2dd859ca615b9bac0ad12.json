{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./listings.service\";\nexport class ListingformComponent {\n  constructor(_formbuilder, _router, _route, _listingService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._listingService = _listingService;\n    this.isEditMode = false;\n    this.listingId = -1;\n    this.listingForm = _formbuilder.group({\n      name: ['', Validators.required],\n      price: [0, Validators.required],\n      description: [''],\n      imageUrl: ['']\n    });\n  }\n  onSubmit() {\n    console.log(\"ListingCreate form submitted:\");\n    console.log(this.listingForm);\n    const newListing = this.listingForm.value;\n    if (this.isEditMode) {\n      this._listingService.updateListing(this.listingId, newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing update failed');\n        }\n      });\n    } else {\n      this._listingService.createListing(newListing).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/listings']);\n        } else {\n          console.log('Listing creation failed');\n        }\n      });\n    }\n  }\n  backToListings() {\n    this._router.navigate(['/listings']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false; // Create mode\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true; // Edit mode\n        this.listingId = +params['id']; // Convert to number\n        this.loadListingForEdit(this.listingId);\n      }\n    });\n  }\n  loadListingForEdit(listingId) {\n    this._listingService.getListingById(listingId).subscribe(listing => {\n      console.log('retrived listing: ', listing);\n      this.listingForm.patchValue({\n        name: listing.Name,\n        price: listing.Price,\n        description: listing.Description,\n        imageUrl: listing.ImageUrl\n      });\n    }, error => {\n      console.error('Error loading listing for edit:', error);\n    });\n  }\n}\nListingformComponent.ɵfac = function ListingformComponent_Factory(t) {\n  return new (t || ListingformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ListingService));\n};\nListingformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListingformComponent,\n  selectors: [[\"app-listings-listingform\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function ListingformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ListingformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"textarea\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Image URL:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 10);\n      i0.ɵɵtext(20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function ListingformComponent_Template_button_click_21_listener() {\n        return ctx.backToListings();\n      });\n      i0.ɵɵtext(22, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.listingForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"disabled\", ctx.listingForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" Listing \");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","ListingformComponent","constructor","_formbuilder","_router","_route","_listingService","listingForm","group","name","required","price","description","imageUrl","onSubmit","console","log","newListing","value","isEditMode","updateListing","listingId","subscribe","response","success","message","navigate","createListing","backToListings","ngOnInit","params","loadListingForEdit","getListingById","listing","patchValue","Name","Price","Description","ImageUrl","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\sande\\Desktop\\LosCasaAngular\\ClientApp\\src\\app\\listings\\listingform.component.ts","C:\\Users\\sande\\Desktop\\LosCasaAngular\\ClientApp\\src\\app\\listings\\listingform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ListingService } from './listings.service';\r\n\r\n@Component({\r\n  selector: \"app-listings-listingform\",\r\n  templateUrl: \"./listingform.component.html\"\r\n})\r\nexport class ListingformComponent {\r\n  listingForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  listingId: number = -1;\r\n\r\n  constructor(\r\n    private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _listingService: ListingService\r\n  ) {\r\n    this.listingForm = _formbuilder.group({\r\n      name: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      description: [''],\r\n      imageUrl: ['']\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"ListingCreate form submitted:\");\r\n    console.log(this.listingForm);\r\n    const newListing = this.listingForm.value;\r\n    if (this.isEditMode) {\r\n      this._listingService.updateListing(this.listingId, newListing)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/listings']);\r\n          }\r\n          else {\r\n            console.log('Listing update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._listingService.createListing(newListing)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/listings']);\r\n          }\r\n          else {\r\n            console.log('Listing creation failed');\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backToListings() {\r\n    this._router.navigate(['/listings']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true; // Edit mode\r\n        this.listingId = +params['id']; // Convert to number\r\n        this.loadListingForEdit(this.listingId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadListingForEdit(listingId: number) {\r\n    this._listingService.getListingById(listingId)\r\n      .subscribe(\r\n        (listing: any) => {\r\n          console.log('retrived listing: ', listing);\r\n          this.listingForm.patchValue({\r\n            name: listing.Name,\r\n            price: listing.Price,\r\n            description: listing.Description,\r\n            imageUrl: listing.ImageUrl\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading listing for edit:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<h2>{{ isEditMode ? 'Update' : 'Create' }} Listing</h2>\r\n\r\n<form [formGroup]=\"listingForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Name:</label>\r\n    <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"price\">Price:</label>\r\n    <input type=\"number\" id=\"price\" formControlName=\"price\" class=\"form-control\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"description\">Description:</label>\r\n    <textarea id=\"description\" formControlName=\"description\" class=\"form-control\"></textarea>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"imageUrl\">Image URL:</label>\r\n    <input type=\"text\" id=\"imageUrl\" formControlName=\"imageUrl\" class=\"form-control\" />\r\n  </div>\r\n  <button class='btn btn-primary' type=\"submit\" [disabled]=\"listingForm.invalid\">\r\n    {{ isEditMode ? 'Update' : 'Create' }} Listing\r\n  </button>\r\n  <button class='btn btn-secondary' (click)=\"backToListings()\">Cancel</button>\r\n</form>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}